// --- –¢–µ–ª–µ–≥—Ä–∞–º –¥–∞–Ω–Ω—ã–µ ---
const tg = window.Telegram.WebApp;
const user = tg.initDataUnsafe?.user;

if (user) {
  const photo = document.getElementById("user-photo");
  const greeting = document.getElementById("user-greeting");
  const nameBlock = document.getElementById("user-name");

  if (user.photo_url) {
    photo.src = user.photo_url;
  } else {
    photo.style.display = "none";
  }

  greeting.textContent = `–ü—Ä–∏–≤–µ—Ç, ${user.first_name || user.username || "–≥–æ—Å—Ç—å"}! üëã`;
  nameBlock.textContent = user.username ? `@${user.username}` : "";
}


// === –û–¢–ü–†–ê–í–ö–ê –î–ê–ù–ù–´–• ===
document.getElementById("send").addEventListener("click", async () => {
  const button = document.getElementById("send");
  const field1 = document.getElementById("field1").value;
  const field2 = document.getElementById("field2").value;

  if (!field1 && !field2) {
    alert("–í–≤–µ–¥–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ!");
    return;
  }

  const prompt = `–¢—ã ‚Äî —Ñ–∞–±—Ä–∏–∫–∞ –ø—Ä–æ–º–ø—Ç–æ–≤ (Prompt Architect). –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–º–ø—Ç—ã-–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –¥–ª—è LLM –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON. –¢—ã –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—à—å –∑–∞–¥–∞—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø—Ä—è–º—É—é, –∞ –ø—Ä–æ–µ–∫—Ç–∏—Ä—É–µ—à—å –ø—Ä–æ–º–ø—Ç —Ç–∞–∫, —á—Ç–æ–±—ã –µ–≥–æ –º–æ–∂–Ω–æ –±—ã–ª–æ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤ –ª—é–±–æ–π LLM –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.

2. –ö–æ–Ω—Ç–µ–∫—Å—Ç (The "Why"):
–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
–ö—Ä–∞—Ç–∫–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏: ¬´–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç—ã¬ª
–†–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ –ø–æ—è—Å–Ω–µ–Ω–∏–µ: ¬´–¶–µ–ø–æ—á–∫–∏ –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Ç–≤–∏—Ç—Ç–µ—Ä–∞¬ª

3. –ó–∞–¥–∞—á–∞ (The "What"):
–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–ø—Ç-–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç LLM –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

4. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –∏ —Ä–∞–º–∫–∏ (The "How Not To"):
–¢—ã ‚Äî –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä. –°—Ç—Ä–æ–π –ø—Ä–æ–º–ø—Ç—ã, –∏—Å–ø–æ–ª—å–∑—É—è —Å–ª–µ–¥—É—é—â–∏–µ –º–æ–¥–µ–ª–∏ –∏ –º–µ—Ç–æ–¥—ã –º—ã—à–ª–µ–Ω–∏—è:
SR-FoT: —Å—Ç—Ä–æ–π –ª–æ–≥–∏—á–µ—Å–∫—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–æ –ø—è—Ç–∏—ç—Ç–∞–ø–Ω–æ–º—É —à–∞–±–ª–æ–Ω—É.
RankCoT + BoN: –≥–µ–Ω–µ—Ä–∏—Ä—É–π –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø—Ä–æ–º–ø—Ç–æ–≤ –∏ –≤—ã–±–∏—Ä–∞–π –ª—É—á—à–∏–π.
HPSS: –∏—Å–ø–æ–ª—å–∑—É–π —ç–≤—Ä–∏—Å—Ç–∏–∫—É –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏.
LLMSchema / Think-inside-JSON: –≤—ã–≤–æ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ–ª—å–∫–æ –≤ —Å—Ç—Ä–æ–≥–æ–º JSON.
Self-organize / Self-improve / Self-refine: –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ —É–ª—É—á—à–∞–π –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤.
–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (Macro-Action / LPW): —Å–Ω–∞—á–∞–ª–∞ –ø–ª–∞–Ω ‚Üí –ø–æ—Ç–æ–º —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è.
RAG-–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–º–∫–∏ (SAGE, DeepRAG): –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Ç—Ä–µ–±—É–µ—Ç –ø–æ–∏—Å–∫–∞, —Å—Ç—Ä–æ–π —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.
–ê–Ω—Å–∞–º–±–ª–µ–≤—ã–µ –æ—Ü–µ–Ω—â–∏–∫–∏: –≤–∞–ª–∏–¥–∏—Ä—É–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ—Ü–µ–Ω–æ—á–Ω—ã—Ö –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤.

5. –§–æ—Ä–º–∞—Ç –≤—ã–≤–æ–¥–∞ (The "Give it to me this way"):
–í—ã–≤–æ–¥–∏ –ø—Ä–æ–º–ø—Ç-–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã:
{
  "role": "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å. [–£–ö–ê–ñ–ò–¢–ï —Ä–æ–ª—å LLM, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á—É]",
  "context": "–í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç—ã. –ü–æ—è—Å–Ω–µ–Ω–∏–µ: –¶–µ–ø–æ—á–∫–∏ –ø–æ—Å—Ç–æ–≤ –¥–ª—è —Ç–≤–∏—Ç—Ç–µ—Ä–∞",
  "task": "–†–∞–∑–æ–±—Ä–∞—Ç—å –∑–∞–¥–∞—á—É –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∏—Å–ø–æ–ª—å–∑—É—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–≥–Ω–∏—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏.",
  "constraints_and_frameworks": {
    "thinking_instructions": [
      "–ü—Ä–∏–º–µ–Ω—è–π Chain-of-Thought: –≤—Å–µ–≥–¥–∞ —Ä–∞—Å—Å—É–∂–¥–∞–π –ø–æ—à–∞–≥–æ–≤–æ, –ø–æ–∫–∞–∑—ã–≤–∞–π –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —à–∞–≥–∏.",
      "–ü—Ä–∏–º–µ–Ω—è–π Divide & Conquer: —Ä–∞–∑–±–∏–≤–∞–π –∑–∞–¥–∞—á—É –Ω–∞ –ø–æ–¥–∑–∞–¥–∞—á–∏ –∏ —Ä–µ—à–∞–π –∫–∞–∂–¥—É—é –æ—Ç–¥–µ–ª—å–Ω–æ.",
      "–ò—Å–ø–æ–ª—å–∑—É–π Description-first (ISP2): —Å–Ω–∞—á–∞–ª–∞ –∫—Ä–∞—Ç–∫–æ –æ–ø–∏—à–∏, –∫–∞–∫ –ø–æ–Ω—è–ª –≤—Ö–æ–¥, –∑–∞—Ç–µ–º —Ä–∞—Å—Å—É–∂–¥–∞–π.",
      "–£–ø—Ä–∞–≤–ª—è–π –Ω–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç—å—é: –µ—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö, —É–∫–∞–∑—ã–≤–∞–π –ø—Ä–æ–±–µ–ª—ã –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–π 1‚Äì3 –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –≥–∏–ø–æ—Ç–µ–∑.",
      "–ö–∞–ª–∏–±—Ä—É–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: —É–∫–∞–∑—ã–≤–∞–π —É—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö –≤—ã–≤–æ–¥–æ–≤.",
      "–ü—Ä–∏–º–µ–Ω—è–π Self-verification / Self-refine: —Å–Ω–∞—á–∞–ª–∞ –¥–∞–π –æ—Ç–≤–µ—Ç, –∑–∞—Ç–µ–º –ø—Ä–æ–≤–µ—Ä—å –µ–≥–æ –∏ –∏—Å–ø—Ä–∞–≤—å –æ—à–∏–±–∫–∏.",
      "Best-of-N: –ø—Ä–µ–¥–ª–∞–≥–∞–π –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤/—Å—Ç–∏–ª–µ–π –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞.",
      "Think-then-answer / LLMSchema: –≤—ã–≤–æ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ç—Ä–æ–≥–æ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ü–∏—è—Ö (–ü–æ–Ω–∏–º–∞–Ω–∏–µ ‚Üí –®–∞–≥–∏ ‚Üí –ò—Ç–æ–≥ ‚Üí –ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç–∏ ‚Üí –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å).",
      "Long-context tactics: –µ—Å–ª–∏ –≤–≤–æ–¥ –¥–ª–∏–Ω–Ω—ã–π, —Ä–∞–∑–±–∏–≤–∞–π –µ–≥–æ –Ω–∞ —á–∞—Å—Ç–∏ –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–π –ø–æ—ç—Ç–∞–ø–Ω–æ.",
      "RAG-patterns: –µ—Å–ª–∏ –∑–∞–¥–∞—á–∞ —Ç—Ä–µ–±—É–µ—Ç —Ñ–∞–∫—Ç–æ–≤, —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–π, –∫–æ–≥–¥–∞ –Ω—É–∂–µ–Ω –ø–æ–∏—Å–∫, –∏ –∫–∞–∫ –≤—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω–æ–µ."
    ],
    "notes": "–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ ‚Äî –≤—Å—Ç–∞–≤–ª—è–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ [–£–ö–ê–ñ–ò–¢–ï ‚Ä¶]."
  },
  "output_format": {
    "type": "TEXT | MARKDOWN",
    "schema": {
      "understanding": "–ö–∞–∫ –º–æ–¥–µ–ª—å –ø–æ–Ω—è–ª–∞ –≤—Ö–æ–¥",
      "steps": "–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–µ",
      "solution": "–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ",
      "alternatives": "–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã/–≥–∏–ø–æ—Ç–µ–∑—ã",
      "uncertainties": "–ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —Å–æ–º–Ω–µ–Ω–∏—è",
      "confidence": "–£—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º –≤—ã–≤–æ–¥–∞–º"
    }
  }
}
`;

  
  // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∏ –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
  button.disabled = true;
  button.textContent = "–û–±—Ä–∞–±–æ—Ç–∫–∞‚Ä¶";

  try {
    const response = await fetch(API_URL, {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: MODEL,
        messages: [{ role: "user", content: prompt }]
      })
    });

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`);
    }

    const data = await response.json();
    console.log("–û—Ç–≤–µ—Ç OpenRouter:", data);

    let text = "";
    if (Array.isArray(data.choices) && data.choices.length > 0) {
      text = data.choices[0].message.content || "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏";
    } else {
      text = "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏";
    }



// === –õ–û–ì –í GOOGLE SHEETS (–±–µ–∑ —á—Ç–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, —á—Ç–æ–±—ã –Ω–µ —É–ø–∞—Å—Ç—å –Ω–∞ CORS) ===
try {
  await fetch("https://script.google.com/macros/s/AKfycbxOXWl2ojtUJw8CJc3RibEJK958Yo8D0MkiNs3SvfHJv2ju65nxJVBE96Usei6psW4ghg/exec", {
    method: "POST",
    mode: "no-cors", // <-- –≥–ª–∞–≤–Ω–æ–µ
    headers: {
      "Content-Type": "text/plain;charset=utf-8" // <-- –ù–ï–õ–¨–ó–Ø application/json
    },
    body: JSON.stringify({
      user_id: window.Telegram?.WebApp?.initDataUnsafe?.user?.id || "unknown",
      field1,
      field2
    })
  });
  // –û—Ç–≤–µ—Ç –ø—Ä–æ—á–∏—Ç–∞—Ç—å –Ω–µ–ª—å–∑—è –≤ no-cors ‚Äî –∏ –Ω–µ –Ω—É–∂–Ω–æ.
} catch (e) {
  console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Sheets (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥–ª—è UX):", e);
}







    
    let resultDiv = document.getElementById("result");
    if (!resultDiv) {
      resultDiv = document.createElement("div");
      resultDiv.id = "result";
      resultDiv.style.marginTop = "12px";
      document.body.appendChild(resultDiv);
    }
    resultDiv.textContent = text;

    
// === –ö–ù–û–ü–ö–ê "–°–ö–û–ü–ò–†–û–í–ê–¢–¨" ===
let sendBtn = document.getElementById("send");
let copyButton = document.getElementById("copyButton");
if (!copyButton) {
  copyButton = document.createElement("button");
  copyButton.id = "copyButton";
  copyButton.textContent = "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å";

  
  // –Ω–∞—Å–ª–µ–¥—É–µ–º —Å—Ç–∏–ª–∏ —É send
  copyButton.style.width = getComputedStyle(sendBtn).width;
  copyButton.style.height = getComputedStyle(sendBtn).height;
  copyButton.style.fontSize = getComputedStyle(sendBtn).fontSize;
  copyButton.style.borderRadius = getComputedStyle(sendBtn).borderRadius;

  
  // —Ñ–∏–∫—Å–∏—Ä—É–µ–º
  copyButton.style.position = "fixed";
  copyButton.style.bottom = "10px";
  copyButton.style.left = sendBtn.getBoundingClientRect().left + "px";

  document.body.appendChild(copyButton);

  copyButton.addEventListener("click", () => {
    navigator.clipboard.writeText(resultDiv.textContent)
      .then(() => {
        copyButton.textContent = "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!";
        setTimeout(() => copyButton.textContent = "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å", 2000);
      })
      .catch(err => alert("–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: " + err));
  });
}


  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", err);
    let resultDiv = document.getElementById("result");
    if (!resultDiv) {
      resultDiv = document.createElement("div");
      resultDiv.id = "result";
      resultDiv.style.marginTop = "12px";
      document.body.appendChild(resultDiv);
    }
    resultDiv.textContent = "–û—à–∏–±–∫–∞: " + err.message;
  } finally {

    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    button.disabled = false;
    button.textContent = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å";
  }
});
