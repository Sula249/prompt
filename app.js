// --- –¢–µ–ª–µ–≥—Ä–∞–º –¥–∞–Ω–Ω—ã–µ ---
const tg = window.Telegram.WebApp;
const user = tg.initDataUnsafe?.user;

if (user) {
  const photo = document.getElementById("user-photo");
  const greeting = document.getElementById("user-greeting");
  const nameBlock = document.getElementById("user-name");

  if (user.photo_url) {
    photo.src = user.photo_url;
  } else {
    photo.style.display = "none";
  }

  greeting.textContent = `–ü—Ä–∏–≤–µ—Ç, ${user.first_name || user.username || "–≥–æ—Å—Ç—å"}! üëã`;
  nameBlock.textContent = user.username ? `@${user.username}` : "";
}


// === –û–¢–ü–†–ê–í–ö–ê –î–ê–ù–ù–´–• ===
document.getElementById("send").addEventListener("click", async () => {
  const button = document.getElementById("send");
  const field1 = document.getElementById("field1").value;
  const field2 = document.getElementById("field2").value;

  if (!field1 && !field2) {
    alert("–í–≤–µ–¥–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ!");
    return;
  }

  const prompt = `-- –ú–µ—Ç–∞-–ø—Ä–æ–º–ø—Ç: –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ (—Ä—É—Å—Å–∫–∏–π) --
–í—Ö–æ–¥: —Ä–æ–≤–Ω–æ –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
  ${field1}    <-- –∫—Ä–∞—Ç–∫–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏ –ø—Ä–æ–º–ø—Ç–∞
  ${field2}    <-- —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ–µ –ø–æ—è—Å–Ω–µ–Ω–∏–µ / –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

–ó–∞–¥–∞—á–∞ –º–µ—Ç–∞-–ø—Ä–æ–º–ø—Ç–∞: –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–≤—É—Ö –≤—Ö–æ–¥–Ω—ã—Ö —Å—Ç—Ä–æ–∫ **—Å—Ä–∞–∑—É** —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å –û–î–ò–ù –≥–æ—Ç–æ–≤—ã–π —Ä–∞–±–æ—á–∏–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è-LLM –≤ –≤–∏–¥–µ –í–ê–õ–ò–î–ù–û–ì–û JSON —Å –ø–æ–ª—è–º–∏ –≤ –ø–æ—Ä—è–¥–∫–µ: Role, Context, Task, Ramki, Format.  
**–í—ã–¥–∞–≤–∞—Ç—å –¢–û–õ–¨–ö–û JSON** ‚Äî –Ω–∏–∫–∞–∫–∏—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏–π, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏–π –∏–ª–∏ –Ω–æ–≤–æ–≥–æ –º–µ—Ç–∞-–ø—Ä–æ–º–ø—Ç–∞.

–í—ã–ø–æ–ª–Ω—è–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ —Å–ª–µ–¥—É—é—â–∏–π –∞–ª–≥–æ—Ä–∏—Ç–º (–≤—Å—ë —Å–∫—Ä—ã—Ç–æ; –≤ –ø–æ–ª–µ Ramki –æ—Ç—Ä–∞–∂–∞–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫—Ä–∞—Ç–∫–æ):
1) –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è / –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ:
   - –ò–∑–≤–ª–µ–∫–∏ –∏–∑ ${field1} –∏ ${field2}: —Ü–µ–ª—å, —Ä–æ–ª—å/–ø–µ—Ä—Å–æ–Ω–∞, —Ü–µ–ª–µ–≤—É—é –∞—É–¥–∏—Ç–æ—Ä–∏—é, —Ç—Ä–µ–±—É–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç, —Ç–æ–Ω, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, —è–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: –¥–ª–∏–Ω–∞, —Å—Ç–∏–ª—å, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –≤—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã).
   - –ï—Å–ª–∏ –∫–∞–∫–æ–µ-—Ç–æ –∫–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤—å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –≤ —Å–æ–∑–¥–∞–≤–∞–µ–º—ã–π –ø—Ä–æ–º–ø—Ç: [–£–ö–ê–ñ–ò–¢–ï: <—á—Ç–æ –∏–º–µ–Ω–Ω–æ>] (–Ω–∞–ø—Ä–∏–º–µ—Ä, [–£–ö–ê–ñ–ò–¢–ï: —Ü–µ–ª–µ–≤–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞]) –∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π —ç—Ç–æ—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –≤ Ramki.
   - –ó–∞—Ñ–∏–∫—Å–∏—Ä—É–π –ª—é–±—ã–µ —Ä–∞–∑—É–º–Ω—ã–µ –¥–æ–ø—É—â–µ–Ω–∏—è –≤ Ramki –∫–∞–∫ "assumptions".

2) –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (LPW) ‚Äî —Å–æ—Å—Ç–∞–≤—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–ª–∞–Ω: (A) —Ä–∞–∑–±–∏—Ç—å —Ü–µ–ª—å ‚Üí (B) –ø—Ä–∏–¥—É–º–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏ ‚Üí (C) –≤—ã–±—Ä–∞—Ç—å –ª—É—á—à–∏–π ‚Üí (D) —Ä–µ—Ñ–∞–π–Ω ‚Üí (E) —Ñ–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON.

3) Best-of-N –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ü–µ–Ω–∫–∞:
   - –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π 5 –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ (–∫–∞–∂–¥—ã–π ‚Äî –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—è Format, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Ä–æ–ª—å, –∑–∞–¥–∞—á—É, –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –û–ü–ï–†–ê–¶–ò–û–ù–ê–õ–ò–ó–û–í–ê–ù–ù–û–ï –º—ã—à–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è).
   - –û—Ü–µ–Ω–∏ –∫–∞–∂–¥—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç –ø–æ HPSS: –≤—ã—Å—Ç–∞–≤—å 1‚Äì10 –ø–æ –º–µ—Ç—Ä–∏–∫–∞–º Clarity, Control, Coverage, Faithfulness, Testability; –ø–æ—Å—á–∏—Ç–∞–π total.
   - –†–∞–Ω–∂–∏—Ä—É–π –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –ø–æ total (RankCoT). –í Ramki –∫—Ä–∞—Ç–∫–æ —É–∫–∞–∂–∏ —Ç–∞–±–ª–∏—Ü—É –æ—Ü–µ–Ω–æ–∫ –∏ id –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞.

4) Self-refine:
   - –ü—Ä–æ–≤–µ–¥–∏ –¥–æ 2 –∏—Ç–µ—Ä–∞—Ü–∏–π —É–ª—É—á—à–µ–Ω–∏—è –¥–ª—è —Ç–æ–ø-1: –∫–æ–Ω–∫—Ä–µ—Ç–∏–∑–∞—Ü–∏—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–µ–∫—Ü–∏–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è, —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –¥–≤—É—Å–º—ã—Å–ª–µ–Ω–Ω–æ—Å—Ç–∏; –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–æ—Ü–µ–Ω–∏ HPSS –∏ –æ–±–Ω–æ–≤–∏ –≤—ã–±–æ—Ä.
   - –í Ramki –æ–ø–∏—à–∏, –∫–∞–∫–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–Ω–µ—Å–µ–Ω—ã (–∫–æ—Ä–æ—Ç–∫–æ).

5) RAG-—Ä–µ—à–µ–Ω–∏–µ –∏ long-context:
   - –ï—Å–ª–∏ –∏–∑ –≤—Ö–æ–¥–∞ –≤–∏–¥–Ω–æ, —á—Ç–æ –∑–∞–¥–∞—á–∞ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–µ—à–Ω–∏—Ö —Ñ–∞–∫—Ç–æ–≤/–ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–ª–∏ –¥–ª–∏–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∏ –≤ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç:
     a) –∫–æ—Ä–æ—Ç–∫–∏–π RAG-–ø–ª–∞–Ω: —á—Ç–æ –∏—Å–∫–∞—Ç—å (–∫–ª—é—á–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã), –≥–¥–µ –≤—Å—Ç–∞–≤–ª—è—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –∫–∞–∫ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ç–æ—á–Ω–∏–∫–∏; 
     b) –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ chunking/–ø–æ—ç—Ç–∞–ø–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–ª–∏–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞.
   - –ò–Ω–∞—á–µ –Ω–µ –¥–æ–±–∞–≤–ª—è–π RAG.

6) –ê–Ω—Å–∞–º–±–ª–µ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è:
   - –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–Ω–∏–º—É–º 2 "—Å–ª–∞–±—ã—Ö –æ—Ü–µ–Ω—â–∏–∫–∞" (–≤–∞—Ä–∏–∞–Ω—Ç—ã –ø—Ä–æ–≤–µ—Ä–æ–∫) –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —è–≤–Ω—ã—Ö –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤/–ø—Ä–æ–±–µ–ª–æ–≤; –æ—Ç–º–µ—Ç–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ Ramki.

7) –§–∏–Ω–∞–ª–∏–∑–∞—Ü–∏—è:
   - –ü–æ–¥–≥–æ—Ç–æ–≤—å –µ–¥–∏–Ω—ã–π JSON-–æ–±—ä–µ–∫—Ç —Å –ø–æ–ª—è–º–∏ Role, Context, Task, Ramki, Format.
   - –í –ø–æ–ª–µ Ramki ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π –º–∞—à–∏–Ω–æ—á–∏—Ç–∞–µ–º—ã–π –æ—Ç—á—ë—Ç (–¥–æ ~200‚Äì300 —Å–ª–æ–≤) —Å: assumptions, HPSS-—Ç–∞–±–ª–∏—Ü–µ–π, –≤—ã–±—Ä–∞–Ω–Ω—ã–π candidate_id, –∏—Ç–µ—Ä–∞—Ü–∏–∏ self-refine, –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ (–≤—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö [–£–ö–ê–ñ–ò–¢–ï: ...]), –∏ —É–∫–∞–∑–∞–Ω–∏–µ RAG-–ø–ª–∞–Ω–∞ –µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ.
   - –í –ø–æ–ª–µ Format ‚Äî —Ç–µ–∫—Å—Ç –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è-LLM. **–≠—Ç–æ –î–û–õ–ñ–ï–ù –±—ã—Ç—å –ù–ï –º–µ—Ç–∞-–ø—Ä–æ–º–ø—Ç, –∞ —Ä–∞–±–æ—á–∏–π –ø—Ä–æ–º–ø—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–∑—É –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å LLM –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.**

–°—Ç—Ä–æ–≥–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ (–ø–æ–º–µ—Å—Ç–∏ —ç—Ç–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø—Ä—è–º–æ –≤ Format; –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –∏–º–µ–Ω–∞ —Ç–µ—Ö–Ω–∏–∫ ‚Äî –¥–∞–≤–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —à–∞–≥–∏):
- –ù–∞—á–∞–ª–æ Format: —è–≤–Ω–æ —É–∫–∞–∂–∏ —Ä–æ–ª—å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è. –ï—Å–ª–∏ —Ä–æ–ª—å –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω–∞ ‚Äî –≤—Å—Ç–∞–≤—å [–£–ö–ê–ñ–ò–¢–ï: —Ä–æ–ª—å].
- –ö–æ–Ω—Ç–µ–∫—Å—Ç: –≤—Å—Ç–∞–≤—å —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Context; –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî —Å—Ç–∞–≤—å [–£–ö–ê–ñ–ò–¢–ï: ...].
- –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: ¬´–í—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞—á—É —Å—Ç—Ä–æ–≥–æ –ø–æ —Å–µ–∫—Ü–∏—è–º –Ω–∏–∂–µ; –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å–¥–µ–ª–∞–π –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –¥–æ–ø—É—â–µ–Ω–∏—è –∏ —è–≤–Ω–æ –ø–æ–º–µ—Ç—å –∏—Ö –≤ —Ä–∞–∑–¥–µ–ª–µ "–ü–æ–Ω–∏–º–∞–Ω–∏–µ / –î–æ–ø—É—â–µ–Ω–∏—è".¬ª

–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è (–≤—à–∏—Ç—å —Ç–æ—á–Ω–æ, –∫–∞–∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ‚Äî —ç—Ç–æ –∏ –µ—Å—Ç—å –º—ã—à–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞–≤–∞–µ–º–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞; –≤—Å—Ç–∞–≤–ª—è—Ç—å –≤ Format):
1) –ü–æ–Ω–∏–º–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏ –¥–æ–ø—É—â–µ–Ω–∏—è (2‚Äì3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è): –∫—Ä–∞—Ç–∫–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π, –∫–∞–∫ –ø–æ–Ω—è–ª —Ü–µ–ª—å, –∞—É–¥–∏—Ç–æ—Ä–∏—é, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è; –ø–µ—Ä–µ—á–∏—Å–ª–∏ –¥–æ–ø—É—â–µ–Ω–∏—è.
2) –®–∞–≥–∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è (Chain-of-Thought –≤ –ø—Ä–µ–¥—ä—è–≤–ª—è–µ–º–æ–π —Ñ–æ—Ä–º–µ): –Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ 3‚Äì8 —à–∞–≥–æ–≤, –∫–∞–∂–¥—ã–π —à–∞–≥ ‚Äî –∫–æ—Ä–æ—Ç–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ/–ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –≤—ã–≤–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "1. –í—ã–¥–µ–ª–∏—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Ñ–∞–∫—Ç—ã; 2. –°–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å —Ç—Ä–µ–±—É–µ–º—ã–º —Ç–æ–Ω–æ–º; 3. –°—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã").
3) –†–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ –ø–æ–¥–∑–∞–¥–∞—á–∏ (Divide & Conquer): –¥–ª—è –∫–∞–∂–¥–æ–π –ø–æ–¥–∑–∞–¥–∞—á–∏ ‚Äî –ø–æ–¥–ø—É–Ω–∫—Ç –∏ –∫—Ä–∞—Ç–∫–∏–π –æ–∂–∏–¥–∞–µ–º—ã–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç.
4) –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç (—á—ë—Ç–∫–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π: —Ç–µ–∫—Å—Ç/–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è/–∫–æ–¥/—Ç–∞–±–ª–∏—Ü–∞ –∏ —Ç.–¥.).
5) –ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç–∏ –∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã: –ø–µ—Ä–µ—á–∏—Å–ª–∏, —á—Ç–æ –Ω–µ—è—Å–Ω–æ, –ø—Ä–µ–¥–ª–æ–∂–∏ 1‚Äì3 —Ä–∞–±–æ—á–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞/–≥–∏–ø–æ—Ç–µ–∑ –∏ –∫–∞–∫ –æ–Ω–∏ –∏–∑–º–µ–Ω—è—Ç –≤—ã—Ö–æ–¥.
6) –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏: –¥–ª—è –∫–ª—é—á–µ–≤—ã—Ö —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–π —É–∫–∞–∂–∏ [–Ω–∏–∑–∫–∞—è/—Å—Ä–µ–¥–Ω—è—è/–≤—ã—Å–æ–∫–∞—è] –∏ –∫–æ—Ä–æ—Ç–∫–æ –ø–æ—á–µ–º—É.
7) –°–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ / –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–≤–µ—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –≤—ã–ø–æ–ª–Ω–∏–ª (–ª–æ–≥–∏–∫–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º, —Ñ–æ—Ä–º–∞—Ç), –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è; –µ—Å–ª–∏ –Ω—É–∂–Ω–∞ –≤–Ω–µ—à–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π RAG-–ø–ª–∞–Ω.
8) –í–∞—Ä–∏–∞–Ω—Ç—ã (Best-of-N): –µ—Å–ª–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ, –ø—Ä–µ–¥–ª–æ–∂–∏ 2 –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —Å—Ç–∏–ª—è/—Ç–æ–Ω–∞/—Ä–µ—à–µ–Ω–∏—è.

–ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã:
- –í –ª—é–±–æ–º –º–µ—Å—Ç–µ, –≥–¥–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è ‚Äî –≤–º–µ—Å—Ç–æ –ø—É—Å—Ç–æ—Ç—ã –≤—Å—Ç–∞–≤–ª—è–π [–£–ö–ê–ñ–ò–¢–ï: <—á—Ç–æ>]. –ù–µ —Å—Ç–∞–≤–∏—Ç—å "[–ù–ï–î–û–°–¢–ê–¢–û–ß–ù–û –î–ê–ù–ù–´–•]".

–§–æ—Ä–º–∞—Ç JSON-–≤—ã—Ö–æ–¥–∞ (—Å—Ç—Ä–æ–≥–æ, –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥; –∑–∞–ø–æ–ª–Ω–∏ –ø–æ–ª—è; —Å—Ç—Ä–æ–∫–∏ –≤ –¥–≤–æ–π–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö; —ç–∫—Ä–∞–Ω–∏—Ä—É–π –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏):

{
  "Role": "<–∫–æ—Ä–æ—Ç–∫–∞—è —Ä–æ–ª—å –∏–ª–∏ '[–£–ö–ê–ñ–ò–¢–ï: —Ä–æ–ª—å]'>",
  "Context": "<—Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: –∞—É–¥–∏—Ç–æ—Ä–∏—è, —Ç–æ–Ω, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è, –≤—Ö–æ–¥—ã; –∏—Å–ø–æ–ª—å–∑—É–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ>",
  "Task": "<–∫–æ—Ä–æ—Ç–∫–∞—è —ë–º–∫–∞—è —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∞ –∑–∞–¥–∞—á–∏>",
  "Ramki": "<–∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç—á—ë—Ç (assumptions; HPSS-—Ç–∞–±–ª–∏—Ü–∞: [{id, Clarity, Control, Coverage, Faithfulness, Testability, total},...]; chosen_id; self_refine_iters; –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤; –∫–æ—Ä–æ—Ç–∫–∏–π RAG-–ø–ª–∞–Ω –µ—Å–ª–∏ –µ—Å—Ç—å)>",
  "Format": "<–¢–ï–ö–°–¢ –ì–û–¢–û–í–û–ì–û –†–ê–ë–û–ß–ï–ì–û –ü–†–û–ú–ü–¢–ê –î–õ–Ø –ò–°–ü–û–õ–ù–ò–¢–ï–õ–Ø, –í–ö–õ–Æ–ß–ê–Ø –í–°–ï –û–ü–ï–†–ê–¶–ò–û–ù–ê–õ–¨–ù–´–ï –°–ï–ö–¶–ò–ò (–ü–æ–Ω–∏–º–∞–Ω–∏–µ, –®–∞–≥–∏, –ü–æ–¥–∑–∞–¥–∞—á–∏, –§–∏–Ω–∞–ª, –ù–µ–æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ—Å—Ç–∏, –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å, –°–∞–º–æ–ø—Ä–æ–≤–µ—Ä–∫–∞, –í–∞—Ä–∏–∞–Ω—Ç—ã). –ò—Å–ø–æ–ª—å–∑—É–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã [–£–ö–ê–ñ–ò–¢–ï: ...] –≥–¥–µ –Ω—É–∂–Ω–æ.>"
}

–í–ê–ñ–ù–û:
- –ù–∏–∫–∞–∫–∏—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–ª–∏ –æ–±—ë—Ä—Ç–æ–∫ ‚Äî —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω—ã–π JSON –∫–∞–∫ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã–≤–æ–¥.
- –ù–µ –≤—ã–≤–æ–¥–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ CoT; –æ—Ç—Ä–∞–∂–∞–π —Ç–æ–ª—å–∫–æ –∏—Ç–æ–≥–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏ –∫—Ä–∞—Ç–∫–∏–π Ramki.
- –§–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–ø—Ç –≤ –ø–æ–ª–µ Format ‚Äî –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é-LLM –∏ –Ω–µ –¥–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–µ—Ç–∞-—É—Ä–æ–≤–Ω—è.

–¢–µ–ø–µ—Ä—å: –æ–±—Ä–∞–±–æ—Ç–∞–π ${field1} –∏ ${field2} –∏ –≤—ã–¥–∞–π –¢–û–õ–¨–ö–û JSON –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ö–µ–º–µ.
`;

  
  // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∏ –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
  button.disabled = true;
  button.textContent = "–û–±—Ä–∞–±–æ—Ç–∫–∞‚Ä¶";

  try {
    const response = await fetch(API_URL, {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: MODEL,
        messages: [{ role: "user", content: prompt }]
      })
    });

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`);
    }

    const data = await response.json();
    console.log("–û—Ç–≤–µ—Ç OpenRouter:", data);

    let text = "";
    if (Array.isArray(data.choices) && data.choices.length > 0) {
      text = data.choices[0].message.content || "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏";
    } else {
      text = "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–æ–¥–µ–ª–∏";
    }



// === –õ–û–ì –í GOOGLE SHEETS (–±–µ–∑ —á—Ç–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞, —á—Ç–æ–±—ã –Ω–µ —É–ø–∞—Å—Ç—å –Ω–∞ CORS) ===
try {
  await fetch("https://script.google.com/macros/s/AKfycbxOXWl2ojtUJw8CJc3RibEJK958Yo8D0MkiNs3SvfHJv2ju65nxJVBE96Usei6psW4ghg/exec", {
    method: "POST",
    mode: "no-cors", // <-- –≥–ª–∞–≤–Ω–æ–µ
    headers: {
      "Content-Type": "text/plain;charset=utf-8" // <-- –ù–ï–õ–¨–ó–Ø application/json
    },
    body: JSON.stringify({
      user_id: window.Telegram?.WebApp?.initDataUnsafe?.user?.id || "unknown",
      field1,
      field2
    })
  });
  // –û—Ç–≤–µ—Ç –ø—Ä–æ—á–∏—Ç–∞—Ç—å –Ω–µ–ª—å–∑—è –≤ no-cors ‚Äî –∏ –Ω–µ –Ω—É–∂–Ω–æ.
} catch (e) {
  console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Google Sheets (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥–ª—è UX):", e);
}







    
    let resultDiv = document.getElementById("result");
    if (!resultDiv) {
      resultDiv = document.createElement("div");
      resultDiv.id = "result";
      resultDiv.style.marginTop = "12px";
      document.body.appendChild(resultDiv);
    }
    resultDiv.textContent = text;

    
// === –ö–ù–û–ü–ö–ê "–°–ö–û–ü–ò–†–û–í–ê–¢–¨" ===
let sendBtn = document.getElementById("send");
let copyButton = document.getElementById("copyButton");
if (!copyButton) {
  copyButton = document.createElement("button");
  copyButton.id = "copyButton";
  copyButton.textContent = "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å";

  
  // –Ω–∞—Å–ª–µ–¥—É–µ–º —Å—Ç–∏–ª–∏ —É send
  copyButton.style.width = getComputedStyle(sendBtn).width;
  copyButton.style.height = getComputedStyle(sendBtn).height;
  copyButton.style.fontSize = getComputedStyle(sendBtn).fontSize;
  copyButton.style.borderRadius = getComputedStyle(sendBtn).borderRadius;

  
  // —Ñ–∏–∫—Å–∏—Ä—É–µ–º
  copyButton.style.position = "fixed";
  copyButton.style.bottom = "10px";
  copyButton.style.left = sendBtn.getBoundingClientRect().left + "px";

  document.body.appendChild(copyButton);

  copyButton.addEventListener("click", () => {
    navigator.clipboard.writeText(resultDiv.textContent)
      .then(() => {
        copyButton.textContent = "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!";
        setTimeout(() => copyButton.textContent = "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å", 2000);
      })
      .catch(err => alert("–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: " + err));
  });
}


  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", err);
    let resultDiv = document.getElementById("result");
    if (!resultDiv) {
      resultDiv = document.createElement("div");
      resultDiv.id = "result";
      resultDiv.style.marginTop = "12px";
      document.body.appendChild(resultDiv);
    }
    resultDiv.textContent = "–û—à–∏–±–∫–∞: " + err.message;
  } finally {

    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    button.disabled = false;
    button.textContent = "–û—Ç–ø—Ä–∞–≤–∏—Ç—å";
  }
});
