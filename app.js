// app.js
document.getElementById("send").addEventListener("click", async () => {
  const field1 = document.getElementById("field1").value;
  const field2 = document.getElementById("field2").value;

  // üîë –°–æ–±–∏—Ä–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π prompt
  const prompt = `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª: "${field1}" –∏ "${field2}". –°–æ—Å—Ç–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç.`;

  try {
    const response = await fetch(API_URL, {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: MODEL,    // –¢–æ—á–Ω–æ –∏–º—è –º–æ–¥–µ–ª–∏ –∏–∑ OpenRouter, –Ω–∞–ø—Ä–∏–º–µ—Ä "mistral-7b-instruct"
        input: prompt    // –î–ª—è OpenRouter –ø–æ–ª–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è input, –Ω–µ messages
      })
    });

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status}`);
    }

    const data = await response.json();
    console.log("–û—Ç–≤–µ—Ç OpenRouter:", data);

    // –ß–∞—â–µ –≤—Å–µ–≥–æ OpenRouter –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç output
    alert(data.output || "–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞");

  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", err);
    alert("–û—à–∏–±–∫–∞: " + err.message);
  }
});
